#!/bin/bash
# ==============================================================================
# Docker Advanced: Image Vulnerability Scanner
# ==============================================================================
#
# Description:
#   This script scans a specified Docker image for known vulnerabilities (CVEs)
#   using the 'trivy' security scanner. It provides a simple way to integrate
#   security scanning into your workflow.
#
# Usage:
#   ./image-vulnerability-scan.sh <image_name:tag> [options]
#
# Options:
#   --severity <level>    Filter results by severity (e.g., HIGH,CRITICAL).
#                         (Comma-separated list)
#
# Example:
#   - Scan the latest nginx image for all vulnerabilities:
#     ./image-vulnerability-scan.sh nginx:latest
#
#   - Scan an ubuntu image for only HIGH and CRITICAL vulnerabilities:
#     ./image-vulnerability-scan.sh ubuntu:22.04 --severity HIGH,CRITICAL
#
# Prerequisites:
#   - `trivy` must be installed.
#     See: https://github.com/aquasecurity/trivy
#
# ==============================================================================

set -e
set -u
set -o pipefail

# --- Check Prerequisites ---
if ! command -v trivy &> /dev/null; then
    echo "Error: 'trivy' command not found." >&2
    echo "Please install trivy to use this script." >&2
    echo "Installation instructions can be found at: https://github.com/aquasecurity/trivy" >&2
    exit 1
fi

# --- Script Parameters ---
if [ "$#" -lt 1 ]; then
    echo "Usage: $0 <image_name:tag> [--severity <LEVELS>]" >&2
    exit 1
fi

IMAGE_NAME="$1"
shift

# Default severity
SEVERITY="UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"

# Argument Parsing
while [[ "$#" -gt 0 ]]; do
    case $1 in
        --severity) SEVERITY="$2"; shift ;;
        *) echo "Unknown parameter passed: $1"; exit 1 ;;
    esac
    shift
done


# --- Main Logic ---
echo "Starting vulnerability scan for image: $IMAGE_NAME"
echo "Filtering for severities: $SEVERITY"
echo "------------------------------------------------------------"

# Ensure the image is available locally
if ! docker image inspect "$IMAGE_NAME" &> /dev/null; then
    echo "Image '$IMAGE_NAME' not found locally. Attempting to pull..."
    docker pull "$IMAGE_NAME"
fi

# Run trivy scan
trivy image --severity "$SEVERITY" "$IMAGE_NAME"

echo "------------------------------------------------------------"
echo "Vulnerability scan complete."
