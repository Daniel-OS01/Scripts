#!/bin/bash
# ==============================================================================
# Monitoring & Alerting: Send Formatted Alert
# ==============================================================================
#
# Description:
#   This script sends a formatted, color-coded alert message to a specified
#   webhook URL (compatible with Discord and easily adaptable for Slack).
#   It's designed to be a universal notifier that other scripts can call to
#   report their status, errors, or critical events.
#
# Usage:
#   ./send-alert.sh --title "Backup Complete" --message "Daily backup of db_server finished." --level INFO
#   ./send-alert.sh --title "Critical Error" --message "Database connection failed on prod-db-1." --level CRITICAL
#
# Options:
#   --title <string>      The title of the alert message. (Required)
#   --message <string>    The main body of the alert. (Required)
#   --level <level>       Severity level: INFO, WARNING, CRITICAL. (Default: INFO)
#
# Variables from config.env:
#   - NOTIFICATION_WEBHOOK_URL
#
# Prerequisites:
#   - `curl` and `jq` must be installed.
#
# ==============================================================================

set -e
set -u
set -o pipefail

# --- Configuration ---
# This script assumes that NOTIFICATION_WEBHOOK_URL has been exported into the
# environment by the main.sh orchestrator.

# --- Check Prerequisites ---
if ! command -v curl &> /dev/null || ! command -v jq &> /dev/null; then
    echo "Error: 'curl' and 'jq' are required for this script. Please install them." >&2
    exit 1
fi

# --- Default Values ---
ALERT_TITLE=""
ALERT_MESSAGE=""
ALERT_LEVEL="INFO"

# --- Argument Parsing ---
while [[ "$#" -gt 0 ]]; do
    case $1 in
        --title) ALERT_TITLE="$2"; shift ;;
        --message) ALERT_MESSAGE="$2"; shift ;;
        --level) ALERT_LEVEL=$(echo "$2" | tr '[:lower:]' '[:upper:]'); shift ;;
        *) echo "Unknown parameter passed: $1"; exit 1 ;;
    esac
    shift
done

# --- Validate Inputs ---
if [ -z "$ALERT_TITLE" ] || [ -z "$ALERT_MESSAGE" ]; then
    echo "Error: --title and --message are required parameters." >&2
    echo "Usage: $0 --title <title> --message <message> [--level <level>]" >&2
    exit 1
fi

# --- Main Logic ---

# Set color based on severity level (Discord uses decimal color codes)
COLOR=8421504 # Grey for INFO
case $ALERT_LEVEL in
    "WARNING")
        COLOR=16753920 # Orange
        ;;
    "CRITICAL")
        COLOR=14177041 # Red
        ;;
esac

# Construct the JSON payload. This format is for Discord webhooks.
# Slack uses a different, but similar, structure.
echo "Constructing JSON payload for a Discord-compatible webhook..."
JSON_PAYLOAD=$(jq -n \
                  --arg title "$ALERT_TITLE" \
                  --arg message "$ALERT_MESSAGE" \
                  --arg level "$ALERT_LEVEL" \
                  --argcolor "$COLOR" \
                  '{
                    "username": "System Automation Bot",
                    "embeds": [{
                      "title": $title,
                      "description": $message,
                      "color": $color,
                      "fields": [{
                        "name": "Severity",
                        "value": $level,
                        "inline": true
                      }, {
                        "name": "Timestamp (UTC)",
                        "value": "'$(date -u --iso-8601=seconds)'",
                        "inline": true
                      }],
                      "footer": {
                        "text": "Alert generated by server: '"$(hostname)"'"
                      }
                    }]
                  }')

echo "Sending alert to configured webhook..."
response=$(curl -s -w "%{http_code}" -X POST -H "Content-Type: application/json" \
     -d "$JSON_PAYLOAD" \
     "$NOTIFICATION_WEBHOOK_URL")

http_code="${response: -3}"
body="${response:0:${#response}-3}"

if [ "$http_code" -ge 300 ]; then
    echo "Error: Webhook call failed with status code $http_code." >&2
    echo "Response: $body" >&2
    exit 1
fi

echo "Alert sent successfully."
